{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "chatId": "336401497",
        "text": "={{ $json[\"Trend Emoji\"]}} <b>Crypto Alert</b>: {{ $json.Coin }} ({{ $json.Symbol }})\n\n<b>Trend</b>: {{ $json.Trend }}\n<b>24h Change</b>: {{ $json[\"24h Change\"] }}\n<b>Current Price</b>: {{ $json[\"Current Price\"] }}\n<b>Market Cap</b>: {{ $json[\"Market Cap\"] }}\n<b>24h Volume</b>: {{ $json[\"24h Volume\"] }} \n<b>Global Rank</b>: {{ $json[\"Global Rank\"] }}\n\n<b>ATH Insight</b>: {{ $json[\"ATH Insight\"] }}\n<b>24h Range</b>: {{ $json[\"24h Range\"] }}\n<b>Volatility</b>: {{ $json.Volatility }}\n\nüìä <a href=\"{{ $json[\"Chart Link\"] }}\">View Chart</a>\n\nüìÖ Updated: {{ $json[\"Updated At\"] }}\nüìà Data Source: CoinGecko (INR)\nüîÅ Triggered by: n8n 2025+ Automation",
        "additionalFields": {
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        48,
        -256
      ],
      "id": "dcea8ead-d4d5-43bb-94d9-64171bc5153a",
      "name": "Send a text message",
      "webhookId": "d72f65a2-79ff-4683-9ce6-376a9817dddc",
      "credentials": {
        "telegramApi": {
          "id": "xvOjrGxXTsvaMqIN",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=50&page=1&sparkline=false",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -800,
        -208
      ],
      "id": "928605d7-330a-44dd-b519-d0c24182f873",
      "name": "HTTP Request -  CoinGecko INR"
    },
    {
      "parameters": {
        "jsCode": "const coins = $input.all();\nconst timeNow = new Date().toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' });\n\nreturn coins\n  .filter(item => item.json.price_change_percentage_24h <= -5)\n  .map(item => {\n    const coin = item.json;\n    const trendEmoji = 'üìâ';\n    const trendLabel = 'Bearish ‚ùÑÔ∏è';\n    const priceINR = `‚Çπ${coin.current_price.toLocaleString('en-IN')}`;\n    const change = `${coin.price_change_percentage_24h.toFixed(2)}%`;\n    const chartLink = `https://www.coingecko.com/en/coins/${coin.id}`;\n    const marketCap = `‚Çπ${coin.market_cap.toLocaleString('en-IN')}`;\n    const rank = `#${coin.market_cap_rank}`;\n\n    return {\n      json: {\n        message: `${trendEmoji} <b>Crypto Alert</b>: ${coin.name} (${coin.symbol.toUpperCase()})\n<b>Trend</b>: ${trendLabel}\n<b>24h Change</b>: ${change}\n<b>Current Price</b>: ${priceINR}\n<b>Market Cap</b>: ${marketCap}\n<b>Global Rank</b>: ${rank}\n\nüìä <a href=\"${chartLink}\">View Chart</a>\n\nüìÖ Updated: ${timeNow}\nüìà Data Source: CoinGecko (INR)\nüîÅ Triggered by: n8n 2025+ Automation`\n      }\n    };\n  });\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        -640
      ],
      "id": "7a19ef02-91ca-4817-b0f9-a2d792c582f0",
      "name": "Code for Bearish"
    },
    {
      "parameters": {
        "jsCode": "const coins = $input.all();\nconst now = new Date();\nconst timeNow = now.toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' });\nconst hhmm = now.toLocaleTimeString('en-IN', { timeZone: 'Asia/Kolkata', hour: '2-digit', minute: '2-digit' });\n\nreturn coins\n  .filter(item => Math.abs(item.json.price_change_percentage_24h) >= 5)\n  .map(item => {\n    const coin = item.json;\n    const trendEmoji = coin.price_change_percentage_24h > 0 ? 'üöÄ' : 'üìâ';\n    const trendLabel = coin.price_change_percentage_24h > 0 ? 'Bullish üî•' : 'Bearish ‚ùÑÔ∏è';\n    const priceINR = `‚Çπ${coin.current_price.toLocaleString('en-IN')}`;\n    const change = `${coin.price_change_percentage_24h > 0 ? '+' : ''}${coin.price_change_percentage_24h.toFixed(2)}%`;\n    const chartLink = `https://www.coingecko.com/en/coins/${coin.id}`;\n    const marketCap = `‚Çπ${coin.market_cap.toLocaleString('en-IN')}`;\n    const rank = `#${coin.market_cap_rank}`;\n\n    return {\n      json: {\n        message: `${trendEmoji} <b>Crypto Alert</b>: ${coin.name} (${coin.symbol.toUpperCase()})\n<b>Trend</b>: ${trendLabel}\n<b>24h Change</b>: ${change}\n<b>Current Price</b>: ${priceINR}\n<b>Market Cap</b>: ${marketCap}\n<b>Global Rank</b>: ${rank}\n\nüìä <a href=\"${chartLink}\">View Chart</a>\n\nüìÖ Updated: ${timeNow}\nüïí Last Updated at: ${hhmm}\nüìà Data Source: CoinGecko (INR)\nüîÅ Triggered by: n8n 2025+ Automation`\n      }\n    };\n  });\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -160,
        -640
      ],
      "id": "4b7d307a-f30a-4f68-a38d-1c394d380b15",
      "name": "Code for Bullish"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        96,
        -640
      ],
      "id": "f78fe282-c114-4a77-86c1-53af6aee91e6",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "const coins = $input.all().map(i => i.json);\nconst timeNow = new Date().toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' });\n\nfunction formatCoin(coin, trendEmoji, trendLabel) {\n  const priceINR = `‚Çπ${coin.current_price.toLocaleString('en-IN')}`;\n  const change = `${coin.price_change_percentage_24h > 0 ? '+' : ''}${coin.price_change_percentage_24h.toFixed(2)}%`;\n  const marketCap = `‚Çπ${coin.market_cap.toLocaleString('en-IN')}`;\n  const volume = `‚Çπ${coin.total_volume.toLocaleString('en-IN')}`;\n  const volumeTrend = coin.total_volume > coin.market_cap * 0.05 ? 'üî∫' : 'üîª';\n  const rank = `#${coin.market_cap_rank}`;\n  const chartLink = `https://www.coingecko.com/en/coins/${coin.id}`;\n\n  // ATH Insight\n  const athDistance = ((coin.ath - coin.current_price) / coin.ath) * 100;\n  const athLabel = athDistance < 10 ? 'üü¢ Near ATH' :\n                   athDistance < 25 ? 'üü° Watch Zone' :\n                   'üî¥ Far Below ATH';\n\n  // 24h Range Insight\n  const high = coin.high_24h;\n  const low = coin.low_24h;\n  let rangePos = ((coin.current_price - low) / (high - low)) * 100;\n  rangePos = Math.min(Math.max(rangePos, 0), 100);\n  const rangeLabel = rangePos >= 80 ? 'üîº Near 24h High' :\n                     rangePos <= 20 ? 'üîΩ Near 24h Low' :\n                     '‚öñÔ∏è In the Middle';\n  const rangeStr = `${rangeLabel} (${rangePos.toFixed(1)}%)`;\n\n  // Volatility Score\n  const volatility = ((high - low) / coin.current_price) * 100;\n  const volatilityBadge = volatility > 10 ? 'üî• High Volatility' :\n                          volatility > 5 ? 'üü¶ Medium Volatility' :\n                                           'üü© Low Volatility';\n\n  return {\n    json: {\n      message: `${trendEmoji} <b>Crypto Alert</b>: ${coin.name} (${coin.symbol?.toUpperCase()})\n<b>Trend</b>: ${trendLabel}\n<b>24h Change</b>: ${change}\n<b>Current Price</b>: ${priceINR}\n<b>Market Cap</b>: ${marketCap}\n<b>24h Volume</b>: ${volume} ${volumeTrend}\n<b>Global Rank</b>: ${rank}\n\n<b>ATH Insight</b>: ${athLabel}\n<b>24h Range</b>: ${rangeStr}\n<b>Volatility</b>: ${volatilityBadge}\n\nüìä <a href=\"${chartLink}\">View Chart</a>\n\nüìÖ Updated: ${timeNow}\nüìà Data Source: CoinGecko (INR)\nüîÅ Triggered by: n8n 2025+ Automation`\n    }\n  };\n}\n\n// Split categories and format\nconst bullish = coins\n  .filter(c => c.price_change_percentage_24h >= 5)\n  .sort((a, b) => Math.abs(b.price_change_percentage_24h) - Math.abs(a.price_change_percentage_24h))\n  .slice(0, 5)\n  .map(c => formatCoin(c, 'üöÄ', 'Bullish üî•'));\n\nconst bearish = coins\n  .filter(c => c.price_change_percentage_24h <= -5)\n  .sort((a, b) => Math.abs(b.price_change_percentage_24h) - Math.abs(a.price_change_percentage_24h))\n  .slice(0, 5)\n  .map(c => formatCoin(c, 'üìâ', 'Bearish ‚ùÑÔ∏è'));\n\nconst sideways = coins\n  .filter(c => Math.abs(c.price_change_percentage_24h) < 5)\n  .sort((a, b) => Math.abs(b.price_change_percentage_24h) - Math.abs(a.price_change_percentage_24h))\n  .slice(0, 5)\n  .map(c => formatCoin(c, '‚öñÔ∏è', 'Sideways ‚öñÔ∏è'));\n\nreturn [...bullish, ...bearish, ...sideways];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -624,
        -368
      ],
      "id": "1b1306e1-17b7-4fc1-bdd9-e1aae4eca2b4",
      "name": "ALL LOGIC"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 15
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1008,
        -512
      ],
      "id": "ee6efd8f-7eae-4c7e-8e20-0a755638e1b1",
      "name": "Every 15 minutes"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Yc1DidfDwlaLDT3rpAnEJII4Y1vbrfTe5Ub4ZEUylsg",
          "mode": "list",
          "cachedResultName": "n8n Crypto Pulse",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Yc1DidfDwlaLDT3rpAnEJII4Y1vbrfTe5Ub4ZEUylsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 6972069,
          "mode": "list",
          "cachedResultName": "CryptoPulseAlerts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Yc1DidfDwlaLDT3rpAnEJII4Y1vbrfTe5Ub4ZEUylsg/edit#gid=6972069"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Coin": "={{$json[\"name\"]}}",
            "Symbol": "={{$json[\"symbol\"]}}",
            "Trend": "={{$json[\"trend\"]}}",
            "24h Change": "={{$json[\"price_change_24h\"]}}",
            "Current Price": "={{$json[\"current_price\"]}}",
            "Market Cap": "={{$json[\"market_cap\"]}}",
            "24h Volume": "={{$json[\"volume_24h\"]}}",
            "Global Rank": "={{$json[\"global_rank\"]}}",
            "ATH Insight": "={{$json[\"ath_label\"]}}",
            "24h Range": "={{$json[\"range_label\"]}}",
            "Volatility": "={{$json[\"volatility\"]}}",
            "Chart Link": "={{$json[\"chart_link\"]}}",
            "Updated At": "={{$json[\"updated_at\"]}}",
            "Trend Emoji": "={{$json[\"trend_emoji\"]}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Coin",
              "displayName": "Coin",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Symbol",
              "displayName": "Symbol",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Trend Emoji",
              "displayName": "Trend Emoji",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Trend",
              "displayName": "Trend",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "24h Change",
              "displayName": "24h Change",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Current Price",
              "displayName": "Current Price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Market Cap",
              "displayName": "Market Cap",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "24h Volume",
              "displayName": "24h Volume",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Global Rank",
              "displayName": "Global Rank",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ATH Insight",
              "displayName": "ATH Insight",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "24h Range",
              "displayName": "24h Range",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Volatility",
              "displayName": "Volatility",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Chart Link",
              "displayName": "Chart Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Updated At",
              "displayName": "Updated At",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -240,
        -256
      ],
      "id": "8a4d6401-538a-40b4-adc3-553becd2ce6f",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "j9uyZ3hMyXl1vcyT",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const msg = item.json.message;\n\n  const getValue = (label) => {\n    const regex = new RegExp(`<b>${label}</b>:\\\\s*(.*?)\\\\n`);\n    const match = msg.match(regex);\n    return match ? match[1].trim() : '';\n  };\n\n  const coinMatch = msg.match(/<\\/b>:\\s*(.*?)\\s\\((.*?)\\)/);\n  const trendEmojiMatch = msg.match(/^(\\S+)/); // Extracts the emoji at the very start\n  const trendEmoji = trendEmojiMatch ? trendEmojiMatch[1] : '';\n\n  return {\n    json: {\n      trend_emoji: trendEmoji,\n      name: coinMatch ? coinMatch[1] : '',\n      symbol: coinMatch ? coinMatch[2] : '',\n      trend: getValue(\"Trend\"),\n      price_change_24h: getValue(\"24h Change\"),\n      current_price: getValue(\"Current Price\"),\n      market_cap: getValue(\"Market Cap\"),\n      volume_24h: getValue(\"24h Volume\"),\n      global_rank: getValue(\"Global Rank\").replace('#', ''),\n      ath_label: getValue(\"ATH Insight\"),\n      range_label: getValue(\"24h Range\"),\n      volatility: getValue(\"Volatility\"),\n      chart_link: (msg.match(/<a href=\"(.*?)\">/) || [])[1] || '',\n      updated_at: (msg.match(/üìÖ Updated: (.*?)\\n/) || [])[1] || '',\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -416,
        -416
      ],
      "id": "14d30b56-ebe5-4f33-aaeb-a78b50e05196",
      "name": "Code"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1Yc1DidfDwlaLDT3rpAnEJII4Y1vbrfTe5Ub4ZEUylsg",
          "mode": "list",
          "cachedResultName": "n8n Crypto Pulse",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Yc1DidfDwlaLDT3rpAnEJII4Y1vbrfTe5Ub4ZEUylsg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 6972069,
          "mode": "list",
          "cachedResultName": "CryptoPulseAlerts",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Yc1DidfDwlaLDT3rpAnEJII4Y1vbrfTe5Ub4ZEUylsg/edit#gid=6972069"
        },
        "options": {
          "returnFirstMatch": "={{ false }}"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -32,
        -448
      ],
      "id": "fb5007fc-b021-4236-8669-5af343d7d001",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "j9uyZ3hMyXl1vcyT",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map(item => {\n  const row = item.json;\n\n  return {\n    json: {\n      message: `üöÄ <b>${row.Coin} (${row.Symbol})</b>\\n` +\n               `<b>Trend</b>: ${row.Trend}\\n` +\n               `<b>24h Change</b>: ${row['24h Change']}\\n` +\n               `<b>Current Price</b>: ${row['Current Price']}\\n` +\n               `<b>Market Cap</b>: ${row['Market Cap']}\\n` +\n               `<b>24h Volume</b>: ${row['24h Volume']}\\n` +\n               `<b>Global Rank</b>: #${row['Global Rank']}\\n\\n` +\n               `<b>ATH Insight</b>: ${row['ATH Insight']}\\n` +\n               `<b>24h Range</b>: ${row['24h Range']}\\n\\n` +\n               `üìà Data Source: CoinGecko (INR)\\n` +\n               `üîÅ Triggered by: n8n 2025+ Automation`\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        336,
        -640
      ],
      "id": "0764ce10-325b-411a-99b0-376ff5e02636",
      "name": "Code1"
    }
  ],
  "pinData": {},
  "connections": {
    "HTTP Request -  CoinGecko INR": {
      "main": [
        [
          {
            "node": "ALL LOGIC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code for Bearish": {
      "main": [
        []
      ]
    },
    "Code for Bullish": {
      "main": [
        []
      ]
    },
    "Merge": {
      "main": [
        []
      ]
    },
    "ALL LOGIC": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 15 minutes": {
      "main": [
        [
          {
            "node": "HTTP Request -  CoinGecko INR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        []
      ]
    },
    "Code1": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d0361569-0125-42d7-a362-a4bdddb05841",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "c0bc446cc26368672356f423a409486c3955fc38a1032a6777c2d864e35c43b7"
  },
  "id": "B4yYy98Pjsb6Qcg4",
  "tags": []
}